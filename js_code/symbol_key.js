//====================================================
// ЁЯз┐ JavaScript Symbol тАФ Full Note (ржмрж╛ржВрж▓рж╛ рж╕рж╣)
//====================================================

/*
ЁЯУж Symbol Overview
тФЬтФАтФА Symbol рж╣рж▓рзЛ JavaScript-ржПрж░ ржПржХржЯрж┐ Primitive Data Type
тФВ   тФЬтФА ржкрзНрж░рждрж┐ржмрж╛рж░ Symbol() ржХрж▓ ржХрж░рж▓рзЗ ржирждрзБржи unique ржорж╛ржи рждрзИрж░рж┐ рж╣рзЯ
тФВ   тФФтФА Symbol рж╕рж╛ржзрж╛рж░ржгржд object key рж╣рж┐рж╕рзЗржмрзЗ ржмрзНржпржмрж╣рзГржд рж╣рзЯ (hidden/private data рж░рж╛ржЦрж╛рж░ ржЬржирзНржп)
|
тФЬтФАтФА тЬЕ Syntax:
тФВ      const mySym = Symbol("description");
|
тФЬтФАтФА ЁЯзн Example:
тФВ      const sym1 = Symbol("id");
тФВ      const sym2 = Symbol("id");
тФВ      console.log(sym1 === sym2); // false (рж╕ржм Symbol ржЖрж▓рж╛ржжрж╛)
|
тФЬтФАтФА тЪЩя╕П Symbol ржжрж┐рзЯрзЗ Object Property
тФВ      const mySym = Symbol("key1");
тФВ      const user = {
тФВ          name: "Saurob",
тФВ          [mySym]: "Secret Value"
тФВ      };
тФВ      console.log(user[mySym]); // Secret Value тЬЕ
|
тФФтФАтФА ЁЯФТ ржХрзЗржи Symbol ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ
    тФЬтФА 1я╕ПтГг Unique Key рждрзИрж░рж┐ ржХрж░рждрзЗ
    тФВ     тЖТ Symbol key рж╕ржмрж╕ржорзЯ ржПржХржХ рж╣рзЯ, ржХрзЛржирзЛ duplicate рж╣рзЯ ржирж╛
    |
    тФЬтФА 2я╕ПтГг Hidden / Private Property рж░рж╛ржЦрждрзЗ
    тФВ     тЖТ for...in, Object.keys(), JSON.stringify() рждрзЗ Symbol key ржжрзЗржЦрж╛ ржпрж╛рзЯ ржирж╛
    |
    тФЬтФА 3я╕ПтГг Key Conflict ржПржбрж╝рж╛рждрзЗ
    тФВ     тЖТ ржЕржирзНржп ржХрзЛржб ржмрж╛ рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржПржХржЗ ржирж╛ржорзЗрж░ key ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗржУ Symbol key safe ржерж╛ржХрзЗ
    |
    тФЬтФА 4я╕ПтГг Object Behavior ржХрж╛рж╕рзНржЯржорж╛ржЗржЬ ржХрж░рждрзЗ (Built-in Symbol)
    тФВ     тЖТ ржпрзЗржоржи: Symbol.iterator, Symbol.toPrimitive, Symbol.toStringTag ржЗрждрзНржпрж╛ржжрж┐
    |
    тФФтФА 5я╕ПтГг Internal Logic рж▓рзБржХрж┐рзЯрзЗ рж░рж╛ржЦрждрзЗ
          тЖТ Sensitive data ржмрж╛ internal value рж▓рзБржХрж╛ржирзЛ ржпрж╛рзЯ

//----------------------------------------------------
// ЁЯХ╡я╕П Hidden Property Example
//----------------------------------------------------
const secret = Symbol("password");
const account = {
    name: "Admin",
    [secret]: "12345"
};
for (let key in account) {
    console.log(key); // рж╢рзБржзрзБ 'name' ржжрзЗржЦрж╛ ржпрж╛ржмрзЗ
}
console.log(Object.keys(account)); // ["name"]
console.log(account[secret]);      // "12345" тЬЕ

//----------------------------------------------------
// тЪЩя╕П Conflict-Free Property Example
//----------------------------------------------------
const id = Symbol("id");
const user = {
    name: "Rafi",
    [id]: 101
};
user["id"] = "Normal ID"; // string key
console.log(user["id"]); // "Normal ID"
console.log(user[id]);   // 101 тЬЕ

//----------------------------------------------------
// ЁЯза Well-known Symbols (Built-in Use)
//----------------------------------------------------
/*
JavaScript ржХрж┐ржЫрзБ predefined Symbol ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ object behavior ржХрж╛рж╕рзНржЯржорж╛ржЗржЬ ржХрж░рждрзЗ:
  тФЬтФА Symbol.iterator     тЖТ Object ржХрзЗ iterable ржмрж╛ржирж╛рзЯ
  тФЬтФА Symbol.toPrimitive  тЖТ Object ржХрзЗ number/string ржП ржХржиржнрж╛рж░рзНржЯ ржХрж░рж╛рж░ рж╕ржорзЯ ржХрж╛рж╕рзНржЯржо рж░рж┐ржЯрж╛рж░рзНржи ржжрзЗрзЯ
  тФЬтФА Symbol.toStringTag  тЖТ Object ржПрж░ toString() ржЖржЙржЯржкрзБржЯ ржХрж╛рж╕рзНржЯржо ржХрж░рзЗ
*/
const obj = {
  [Symbol.toPrimitive](hint) {
      return hint === "string" ? "Custom" : 99;
  }
};
console.log(`${obj}`); // "Custom"
console.log(+obj);     // 99

//----------------------------------------------------
// ЁЯФН Symbol vs String Key рждрзБрж▓ржирж╛
//----------------------------------------------------
/*
| ржмрж┐рж╖рзЯ | String Key | Symbol Key |
|------|-------------|-------------|
| ржЗржЙржирж┐ржХ | тЭМ ржирж╛ | тЬЕ рж╣рзНржпрж╛ржБ |
| ржЯрзНрж░рж╛ржнрж╛рж░рзНрж╕рзЗржмрж▓ | тЬЕ рж╣рзНржпрж╛ржБ | тЭМ ржирж╛ |
| ржУржнрж╛рж░рж░рж╛ржЗржЯ рж╣рждрзЗ ржкрж╛рж░рзЗ | тЬЕ рж╣рзНржпрж╛ржБ | тЭМ ржирж╛ |
| Built-in Behavior ржХрж╛рж╕рзНржЯржорж╛ржЗржЬ | тЭМ ржирж╛ | тЬЕ рж╣рзНржпрж╛ржБ |
*/

//----------------------------------------------------
// ЁЯзй Symbol Info & Description
//----------------------------------------------------
const mySym = Symbol("secret");
console.log(typeof mySym);        // "symbol"
console.log(mySym.description);   // "secret"

//====================================================
// ЁЯзн рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржк
//====================================================
/*
ЁЯФ╣ Symbol рж╣рж▓рзЛ ржПржХржХ ржУ unique primitive data typeред
ЁЯФ╣ ржПржЯрж┐ object key рж╣рж┐рж╕рзЗржмрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ hidden/private property рж░рж╛ржЦрж╛ ржпрж╛рзЯред
ЁЯФ╣ Symbol key for...in ржмрж╛ Object.keys() ржП ржжрзЗржЦрж╛ ржпрж╛рзЯ ржирж╛ред
ЁЯФ╣ ржЕржирзНржп ржХрзЛржбрзЗ ржПржХржЗ key ржирж╛ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗржУ conflict рж╣рзЯ ржирж╛ред
ЁЯФ╣ JavaScript-ржПрж░ ржЕржирзЗржХ internal behavior Symbol ржжрзНржмрж╛рж░рж╛ ржирж┐рзЯржирзНрждрзНрж░рж┐ржд рж╣рзЯред
*/
//====================================================
