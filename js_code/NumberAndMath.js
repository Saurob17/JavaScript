//=========================================
// ЁЯзо JavaScript Number & Math Full Concept
//=========================================


// тЬЕ Primitive Number (Stored in Stack)
const score = 400;
console.log(score);           // ЁЯСЙ 400
console.log(typeof score);    // ЁЯСЙ "number"

//-----------------------------------------

// тЬЕ Number Object (Stored in Heap)
// "new Number()" ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ primitive ржирж╛, Object рждрзИрж░рж┐ рж╣рзЯ
const balance = new Number(100);
console.log(balance);          // ЁЯСЙ [Number: 100]
console.log(typeof balance);   // ЁЯСЙ "object"

//-----------------------------------------

// тЬЕ toFixed() тЖТ ржжрж╢ржорж┐ржХрзЗрж░ ржкрж░ ржХржд ржШрж░ ржерж╛ржХржмрзЗ рждрж╛ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рзЗ (string рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ)
console.log(balance.toFixed(2));   // ЁЯСЙ "100.00"

// тЬЕ toString() тЖТ рж╕ржВржЦрзНржпрж╛ржХрзЗ string ржП рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рзЗ
console.log(balance.toString());   // ЁЯСЙ "100"

//-----------------------------------------

// тЬЕ toPrecision(n) тЖТ ржорзЛржЯ n рж╕ржВржЦрзНржпржХ significant digit рж░рж╛ржЦрзЗ
const otherNumber = 1244.956;
console.log(otherNumber.toPrecision(3));  // ЁЯСЙ "1.24e+3" (scientific notation format)

//-----------------------------------------

// тЬЕ toLocaleString(locale) тЖТ рж╕ржВржЦрзНржпрж╛ржХрзЗ рж╕рзНржерж╛ржирзАржпрж╝ ржнрж╛рж╖рж╛рж░ ржлрж░ржорзНржпрж╛ржЯрзЗ ржжрзЗржЦрж╛ржпрж╝
const handreds = 100000;
console.log(handreds.toLocaleString("bn-BD")); // ЁЯСЙ "рзз,рзжрзж,рзжрзжрзж"

//=========================================
// ЁЯза Math Object (Built-in Utility)
//=========================================

// Math ржирж┐ржЬрзЗржЗ ржПржХржЯрж┐ Object
console.log(Math);           // ЁЯСЙ Object [Math] {}
console.log(typeof Math);    // ЁЯСЙ "object"

//-----------------------------------------

// тЬЕ Math Constants
console.log(Math.PI);   // ЁЯСЙ 3.141592653589793
console.log(Math.E);    // ЁЯСЙ 2.718281828459045

//-----------------------------------------

// тЬЕ Rounding Methods
const num = 4.56789;
console.log(num);               // ЁЯСЙ 4.56789
console.log(Math.round(num));   // ЁЯСЙ 5   (nearest integer)
console.log(Math.floor(num));   // ЁЯСЙ 4   (always down)
console.log(Math.ceil(num));    // ЁЯСЙ 5   (always up)
console.log(Math.trunc(num));   // ЁЯСЙ 4   (removes decimal part)

//-----------------------------------------

// тЬЕ Math.random() тЖТ 0 ржерзЗржХрзЗ 1 ржПрж░ ржоржзрзНржпрзЗ рж░тАНрзНржпрж╛ржирзНржбржо ржорж╛ржи ржжрзЗрзЯ
const randomNum = Math.random();
console.log(randomNum);                  // ЁЯСЙ random decimal (like 0.4563)
console.log(Math.round(randomNum * 100)); // ЁЯСЙ random integer (0тАУ100)

//-----------------------------------------

// тЬЕ Min & Max
console.log(Math.min(23,45,67,12,34,89,-23,-45));  // ЁЯСЙ -45
console.log(Math.max(23,45,67,12,34,89,-23,-45));  // ЁЯСЙ 89

//-----------------------------------------

// тЬЕ Power & Square Root
console.log(Math.pow(2,3));  // ЁЯСЙ 8   (2┬│)
console.log(2**3);           // ЁЯСЙ 8   (same)
console.log(Math.sqrt(64));  // ЁЯСЙ 8   (тИЪ64)
console.log(64**0.5);        // ЁЯСЙ 8   (same)

//=========================================
// ЁЯФ╕ Summary:
// toFixed(), toPrecision(), toString(), toLocaleString() тЖТ рж╕ржмржЗ string return ржХрж░рзЗ
// Math object тЖТ provides utility methods for numeric operations
//=========================================
